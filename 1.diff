var _defineProperty = require('babel-runtime/helpers/define-property').default;var _extends = require('babel-runtime/helpers/extends').default;(function () {Flint.file('header.js', function (require) {Flint.staticStyles('Header', { '$': '#_flintapp .ViewHeader', '$wrap': '#_flintapp wrap.Header, #_flintapp .Header.wrap, #_flintapp .ViewHeader.wrap, #_flintapp .Header > .wrap', '$Nav': '#_flintapp .ViewHeader .ViewNav', '$Social': '#_flintapp .ViewHeader .ViewSocial', '$Logo': '#_flintapp .ViewHeader .ViewLogo' }, { '$': { 











        padding: [2, 0], 
        position: 'absolute', 
        top: 0, 
        left: 0, 
        right: 0, 
        zIndex: 100 }, '$wrap': { 












        flexFlow: 'row', 
        alignItems: 'center', 
        justifyContent: 'center' }, '$Nav': { 







        flexGrow: 1, 
        marginLeft: 2000 }, '$Social': { 




        justifyContent: 'flex-end' }, '$Logo': {} });Flint.view('Header', function (view, on, $) {var nobg = view.prop('nobg', undefined);on.props(function () {nobg = view.getProp('nobg');});view.render(function () {return view.el(['wrap', 1], null, view.el(['Contain', 1], { maxWidth: 880 }, view.el(['Logo', 1], { small: true }), view.el(['Nav', 1], { large: true }), view.el(['Social', 1], { tiny: true, noSlack: true })));});$["$"] = function (_, _index) {return _defineProperty({ background: nobg ? 'transparent' : style.gradient, boxShadow: nobg ? 'transparent' : '0 0 4px rgba(0,0,0,0.25)' }, device.small, { marginBottom: -50, background: style.gradient, boxShadow: 'none', position: 'relative' });};$["wrap"] = function (_, _index) {return _defineProperty({}, device.small, { flexFlow: 'column' });};'51daf78a';$["Nav"] = function (_, _index) {return { marginTop: -3 };};'473cea36';$["Logo"] = function (_, _index) {return _defineProperty({}, 



        device.small, { 
          marginTop: 15 });};});




    var already = false;Flint.staticStyles('Nav', { '$': '#_flintapp .ViewNav', '$a': '#_flintapp a.Nav, #_flintapp .Nav.a, #_flintapp .ViewNav.a, #_flintapp .Nav > .a', '$active': '#_flintapp active.Nav, #_flintapp .Nav.active, #_flintapp .ViewNav.active, #_flintapp .Nav > .active' }, { '$': { 






















        userSelect: 'none', 
        margin: [0, 'auto'], 
        flexFlow: 'row', 
        zIndex: 100 }, '$a': { 








        border: '1px solid transparent', 
        color: 'rgba(255,255,255,0.9)', 
        textShadow: '0 1px 1px rgba(0,0,0,0.35)', 
        fontWeight: 500, 
        borderBottom: 'none', 
        fontSize: 15, 
        padding: [0, 10], 
        cursor: 'pointer', 
        textDecoration: 'none' }, '$active': { 







        fontWeight: 600, 
        color: '#fff' } });Flint.view('Nav', function (view, on, $) {function showInstall(e) {if (router.isActive(routes.home)) util.linkScroll(e);else router.go(routes.home);}var routeProps = function routeProps(path) {return { onClick: router.link(path), className: { active: router.isActive(path) } };};view.render(function () {return Flint.range([_extends({ children: 'Start' }, routeProps(routes.start)), _extends({ children: 'Docs' }, routeProps(routes.docs + '/intro')), _extends({ children: 'Learn' }, routeProps('/learn')), _extends({ children: 'Move to Flint' }, routeProps('/transition'))]).map(function (_, _index) {return view.el(['a', 1, _, _index], _extends({ repeat: [_extends({ children: 'Start' }, routeProps(routes.start)), _extends({ children: 'Docs' }, routeProps(routes.docs + '/intro')), _extends({ children: 'Learn' }, routeProps('/learn')), _extends({ children: 'Move to Flint' }, routeProps('/transition'))] }, _));});});$["$"] = function (_, _index) {return _defineProperty({}, device.small, { marginBottom: 0, margin: [10, 'auto', 0] });};$["a"] = function (_, _index) {return { hover: { color: 'rgba(255,255,255,1)' } };};});Flint.staticStyles('Logo', { '$img': '#_flintapp img.Logo, #_flintapp .Logo.img, #_flintapp .ViewLogo.img, #_flintapp .Logo > .img' }, { '$img': { 













        margin: 'auto', 
        cursor: 'pointer' } });Flint.viewRoots["Logo"] = 'img';Flint.view('Logo', function (view, on, $) {;view.render(function () {return view.el(['img', 1], { root: true, onClick: router.link(routes.home), src: '/assets/images/flintlogo.png' });});var width = 700;var height = 198;var multiplier = view.props.small ? .14 : .28;$["img"] = function (_, _index) {return _defineProperty({ width: Math.round(width * multiplier), height: Math.round(height * multiplier) }, 

        device.small, { 
          alignSelf: 'center' });};});




    var finished = false;Flint.staticStyles('Desc', { '$desc': '#_flintapp .ViewDesc' }, { '$desc': { 





















































        textAlign: 'center', 
        fontSize: 18, 
        fontWeight: 300, 
        lineHeight: '1.6rem', 
        padding: [0, 0, 18], 
        margin: [0, 'auto'], 
        display: 'block', 
        color: '#fff' } });Flint.viewRoots["Desc"] = 'desc';Flint.view('Desc', function (view, on, $) {var betweenPhrase = 3000;var typeSpeed = 130;var started = view.dec('started', view.props.start);var how = view.dec('how', '');var phrases = view.dec('phrases', ['faster', 'creatively', 'with ease']);var phrasePos = view.dec('phrasePos', 0);var charPos = view.dec('charPos', 0);on.mount(run);on.unmount(stop);on.props(function (_ref6) {var already = _ref6.already;var start = _ref6.start;if (already && finished) {view.set('how', how = phrases[2]);return;}if (start && !started) {view.set('started', started = true);run();}});function run() {if (started) setTimeout(step, 1000);}function stop() {finished = true;}function step() {if (phrasePos == phrases.length) return stop(); // if typed to end of word
        if (charPos === phrases[phrasePos].length) {view.set('charPos', charPos = -1);view.set('phrasePos', phrasePos += 1);setTimeout(step, betweenPhrase);} // if typing word
        else {view.set('charPos', charPos += 1);view.set('how', how = phrases[phrasePos].slice(0, charPos));setTimeout(step, typeSpeed);}};view.render(function () {return view.el(['desc', 1], null, 'Web apps, ', how);});});})})();
//# sourceMappingURL=header.js.map